{
  "name": "Statistics",
  "fields": {
    "input1": {
      "label": "Input 1",
      "type": "int",
      "readonly": false,
      "calculate": null
    },
    "input2": {
      "label": "Input 2",
      "type": "int",
      "readonly": false,
      "calculate": null
    },
    "input3": {
      "label": "Input 3",
      "type": "int",
      "readonly": false,
      "calculate": null
    },
    "input4": {
      "label": "Input 4",
      "type": "int",
      "readonly": false,
      "calculate": null
    },
    "input5": {
      "label": "Input 5",
      "type": "int",
      "readonly": false,
      "calculate": null
    },
    "input6": {
      "label": "Input 6",
      "type": "int",
      "readonly": false,
      "calculate": null
    },
    "input7": {
      "label": "Input 7",
      "type": "int",
      "readonly": false,
      "calculate": null
    },
    "input8": {
      "label": "Input 8",
      "type": "int",
      "readonly": false,
      "calculate": null
    },
    "input9": {
      "label": "Input 9",
      "type": "int",
      "readonly": false,
      "calculate": null
    },
    "input10": {
      "label": "Input 10",
      "type": "int",
      "readonly": false,
      "calculate": null
    },
    "mean": {
      "label": "Mean",
      "type": "float",
      "readonly": true,
      "calculate": "([fields.input1.value, fields.input2.value, fields.input3.value, fields.input4.value, fields.input5.value, fields.input6.value, fields.input7.value, fields.input8.value, fields.input9.value, fields.input10.value].reduce((a, b) => a + b, 0) / 10).toFixed(2)"
    },
    "median": {
      "label": "Median",
      "type": "float",
      "readonly": true,
      "calculate": "(() => { const sorted = [fields.input1.value, fields.input2.value, fields.input3.value, fields.input4.value, fields.input5.value, fields.input6.value, fields.input7.value, fields.input8.value, fields.input9.value, fields.input10.value].sort((a, b) => a - b); const mid = Math.floor(sorted.length / 2); return (sorted.length % 2 !== 0) ? sorted[mid] : ((sorted[mid - 1] + sorted[mid]) / 2).toFixed(2); })()"
    },
    "std_deviation": {
      "label": "Standard Deviation",
      "type": "float",
      "readonly": true,
      "calculate": "(() => { const values = [fields.input1.value, fields.input2.value, fields.input3.value, fields.input4.value, fields.input5.value, fields.input6.value, fields.input7.value, fields.input8.value, fields.input9.value, fields.input10.value]; const mean = values.reduce((a, b) => a + b, 0) / values.length; const variance = values.reduce((sum, value) => sum + Math.pow(value - mean, 2), 0) / values.length; return Math.sqrt(variance).toFixed(2); })()"
    }
  }
}
